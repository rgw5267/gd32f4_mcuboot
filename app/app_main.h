/**
 * Change Logs:
 * Date           Author          Notes
 * 2023-06-25     rgw             first version
 */

/*******************************************************************************
[1.0.0.0] 2023-7-31
--------------------------------------------------------------------------------
新增：
1. 修改ProductID为ICCID后10位，修改过程会有蜂鸣器提示
2. 修改蓝牙名称为ProductID
3. 修改蓝牙波特率为115200
4. 蓝牙断开后，1分钟关闭蓝牙
5. 水浸传感器和液位传感器
6. 井盖状态、浸水状态、井盖开启阀值、电压状态、产品型号、固件版本、GPS经纬度
修复：
1. AT指令不回复时，一直重试的问题
已知问题：
1. CPIN返回ERROR后不进行重试  【Fixed in 1.0.0.4】
2. 目前没有判断井盖开启的值，我写的是60度。如果和报警值通用也可以


[1.0.0.1] 2023-8-5
--------------------------------------------------------------------------------
新增：
1. 程序中引用寄存器的值
2. 定时更新温湿度，电压，日期
3. Ctrl控制功能
4. 上报间隔ReportInterval步进改为1分钟
5. 井盖开盖状态判断从60度改为开盖报警阈值判断


[1.0.0.2] 2023-8-6
--------------------------------------------------------------------------------
新增：
1. Ctrl功能-重启设备，重置参数，重置所有参数的控制改为checksum_ctrl

[1.0.0.3] 2023-8-8
--------------------------------------------------------------------------------
新增：
1. 解析ProductModel，根据ProductModel选择不同的功能
修复
2. 不进行休眠时，HPT33只读取一次，导致数据不更新的问题

[1.0.0.4] 2023-8-10
--------------------------------------------------------------------------------
新增：
1. Settings: AngleSensitivity,InitialAngleX,InitialAngleY,InitialAngleZ
2. 后退算法：上报失败存储当前数据，最大存储8条，循环覆盖，上报成功后删除。
3. 休眠时判断后退算法关联唤醒时间
4. Status:WELL_Status_CurrRelativeAngle, WELL_Status_CurrAbsoluteAngle, 1s更新
修复：
1. 修复CPIN返回ERROR不进行重试的问题
2. 修复Duration hardcode 0.1s

[1.0.0.5] 2023-8-13
--------------------------------------------------------------------------------
修复:
1. 修复iap index类型问题导致超过255时溢出, 修改为uint16_t

[1.0.0.6] 2023-8-14
--------------------------------------------------------------------------------
优化:
1. IAP时, trans index兼容8位index和16位index

[1.0.0.7] 2023-8-16
--------------------------------------------------------------------------------
新增:
1. 增加AT失败判断次数到30次, AT失败进入后退算法

[1.1.0.0] 2023-8-16
--------------------------------------------------------------------------------
新增:
1. 启用新boot, 启动地址改为0x08006000, 固件大小限制为100KB
2. 启动检测是否升级成功, 成功则蜂鸣器响两声
3. 重启时, 蜂鸣器短响4声
4. 检测NewFirmwareON, 如果为enable, 则设置固件状态为IMAGE_STATE_READY_TO_DOWNLOAD,
   并重启
5. 添加GPSLatitude, GPSLongitude, GPSstatus设置
6. 添加开盖后, 角度监测时间设置
7. 添加温度和湿度修正系数

移除:
1. 移除IAP功能, 转为boot进行IAP

[1.1.1.0] 2023-8-18
--------------------------------------------------------------------------------
修复:
1. 当型号为JL_ZHJG_MODEL_DEPTH时, 水浸更新时读取
2. 如果水位读取失败则不更新寄存器

[1.1.2.0] 2023-8-23
--------------------------------------------------------------------------------
新增:
1. 全程打开并上报调试信息 DebugInfoON, 设置为1则打开调试信息透传, 设置为0关闭调试信息,
   断电不保存, 1分钟无数据发送断开蓝牙
2. 蓝牙可连接时, 短响三声
优化:
1. 蓝牙断开时, 增加主动断开指令

[1.1.3.0] 2023-8-26
--------------------------------------------------------------------------------
新增:
1. 新增GNSS设备驱动
2. 角度稳定计算, GNSS稳定计算
3. SetupReadyON, 设置1启动校准, 3分钟超时, 并在SetupReadyON中显示当前状态,
   校准时NB不运行. APP查看校准完成或失败后, 需要发送校准结束
优化:
1. NB RESET时序优化
2. AlarmVoltage默认电压改为3.1V
3. ProductModel默认改为JL_ZHJG_02
4. ReportInterval默认改为12*60分钟

[1.1.4.0] 2023-8-28
--------------------------------------------------------------------------------
修复:
1. 蓝牙改名命令超时等待时间过短, 有几率失败, 改为2s,增加一次重试
优化:
1. 增加加速度角度默认值

[1.1.5.0] 2023-8-28
--------------------------------------------------------------------------------
修复:
1. 设置型号后, 蓝牙初始化超时失败问题
优化:
1. 增加蓝牙初始化时, 断开操作

[1.1.6.0] 2023-9-2
--------------------------------------------------------------------------------
新增:
1. 小心跳唤醒判断
2. 跳盖检测及上报
优化:
1. 唤醒状态判断优化
2. NB POST时错误处理

[1.1.7.0] 2023-9-4
--------------------------------------------------------------------------------
新增:
1. 增加 reportType 上报字段, 上报类型完成情况
    "1=心跳上报 √"
    "2=稳定翻盖上报 √"
    "3=颠簸阈值超限上报 √"
    "4=水浸触发上报 √"
    "5=水位触发上报"
    "6=有害气体超限上报"
    "7，8,9 备用未来"
修复:
1. 防止快速水浸同时角度大于初始角度时判断为跳盖
优化:
1. 唤醒状态判断优化
移除:
1. jitterStatus上报字段

[1.1.8.0] 2023-9-5
--------------------------------------------------------------------------------
新增:
1. 无GNSS模组时, 开始设置自学习位置报错
2. 学习成功短响一声
3. 学习失败0b0001
优化:
1. 自学习角度和自学习位置可分开设置

[1.1.9.0] 2023-9-5
--------------------------------------------------------------------------------
修复:
1. 第一次上电角度正常直接进入休眠,导致蓝牙ID未设置问题
2. 总超时时间修改为60分钟

[1.2.0.0] 2023-9-6
--------------------------------------------------------------------------------
新增:
1. 启用1.2版本boot, 修改程序启动地址为0x800B000, 大小为80K
2. 修改中断向量偏移量为0xB000
3. 收到FactoryON后进入自检模式
优化:
1. 跳盖判断优化
2. 唤醒状态判断优化

[1.2.1.0] 2023-9-6
--------------------------------------------------------------------------------
修复:
1. 水浸或液位 吸铁石开机后 正确放置（就是平的一侧朝向天空），机器初始化并首次上报后，
   进入休眠。你这时候翻开模块到90度多点。比较快上报稳定角度，保持井盖模块位置，
   基本5分钟后可能出现 以3秒为间隔的 滴一声，若干时间后消失，在若干时间后回再次出现。
优化:
1. 跳盖灵敏度改为 0 1s, 1 0.5s, 2 0.2s, 3 0.1s, 默认为0.2s

[1.2.2.0] 2023-9-7
--------------------------------------------------------------------------------
修复:
1. 修改boot设置参数为1.2版本

[1.2.2.1] 2023-9-26
--------------------------------------------------------------------------------
新增：
1. EC800M CAT1驱动

[1.2.2.2] 2023-10-6
--------------------------------------------------------------------------------
修复：
1. 修复获取时间为70年时判断的问题

[1.3.0.0] 2023-10-10
--------------------------------------------------------------------------------
新增：
1. 合并EC800和BC260驱动
2. 检测BC260波特率并改为115200
修复：
1. 跳盖阈值超限后，等待角度稳定后再上报

[1.3.1.0] 2023-10-18
--------------------------------------------------------------------------------
优化：
1. 增加水浸引脚稳定判断，稳定时间最小为3.2s
2. 水浸中断初次上报后，每5分钟唤醒查看水浸引脚，大心跳周期内，水浸状态不再上报，水浸消失后上报。
3. 增大ADC上电后稳定时间，以保证读取电压稳定
修复：
1. 通过水浸稳定判断，消除可能存在的水浸状态和上报类型不匹配；不消除确认水浸上报类型后，水浸状态改变导致的类型不匹配
2. 蓝牙通信失败后，报蓝牙错误，关闭蓝牙进入低功耗
新增：
1. 上电初始化上报状态为9，用于诊断上报状态为0的bug

[1.3.2.0] 2023-11-8
--------------------------------------------------------------------------------
优化：
1. RTC时钟改为LSI
2. Vcore 1.8V -> 1.5V
3. FLASH_LATENCY_0 -> FLASH_LATENCY_1

[1.4.0.0] 2023-11-17
--------------------------------------------------------------------------------
新增：
1. OneNet联网，兼容bc260与ec800
2. 新增 MqttProductID 和 MqttAccessKey 存储，生产时需配置相关参数
优化：
1. 将AT接收轮询放入主循环，以适应模组主动发送URC的情况
2. 由于OneNet报文较长，扩大单条数据存储空间到128*6，存储条数从8缩减到4条

[1.4.1.0] 2023-11-23
--------------------------------------------------------------------------------
优化：
1. 使用产品密钥连接OneNet，自动在OneNet创建设备
2. 校准RTC

[1.4.2.0] 2023-12-4
--------------------------------------------------------------------------------
修复:
1. 当con==1时，禁用at_parser_poll
2. OneJson中GeoLocation报文错误
优化：
1. 优化at_urc的处理
新增：
1. 增加WELL_Settings_Platform参数，用于上报云端选择 0=金龙云 1=OneNet 2=新奥云

[1.4.3.0] 2023-12-5
--------------------------------------------------------------------------------
优化:
1. 当水浸或角度稳定后才更新g_WellRegMap
2. 当水浸或角度稳定后，不再读取传感器数据，以防稳定后上报数据不一致
3. 定时唤醒后，下一个状态由WAKE_STAT_REPORT改为WAKE_STAT_RTC_ANGLE
新增：
1. 当系统无法休眠时，60分钟后重启（防御性）
修复：
1. 系统可能因为水浸或角度稳定后再次进入不稳定而导致判断类型不一致而阻塞在状态中，
从而导致防御性重新上报启动，上报类型为9，通过优化2解决可能解决，持续观察
2. CMD_HTTP_STEP_QHTTPPOST中at_obj_set_end_sign需要在命令结束后重置

[1.4.4.0] 2023-12-26
--------------------------------------------------------------------------------
优化：
1. 重构唤醒状态判断逻辑，修复可能存在的多异常状态下唤醒状态判断不准确的问题
2. 液位版在水浸触发时，在监测期间定时上报
3. 优化加速度传感器驱动，使用非阻塞方式等待z轴数据稳定
4. 开盖和心跳唤醒累计溢出时，清空跳盖计数器。累计周期为24*60/reportInterval>3?3:24*60/reportInterval
5. 修改默认跳盖灵敏度为0（0 1s, 1 0.5s, 2 0.2s, 3 0.1s）
6. 跳盖累计次数默认改为10
新增：
1. 上报协议新增jitterCount字段

[1.4.5.0] 2024-1-8
--------------------------------------------------------------------------------
优化：
1. 优化加速度传感器中断使能和禁止位置

*******************************************************************************/

#ifndef __APP_MAIN_H
#define __APP_MAIN_H


#ifdef __cplusplus
extern "C" {
#endif

#define APP_VERSION_MAJOR    1
#define APP_VERSION_MINOR    4
#define APP_VERSION_REVISION 5
#define APP_VERSION_BUILD    0

#define BL_CONFIG_CON_TIMEOUT_SEC           (1 * 60)
#define NB_CONFIG_REPORT_TIME_SEC           (5 * 60)
#define NB_CONFIG_REPORT_TIME               (NB_CONFIG_REPORT_TIME_SEC * 1000)
#define GNSS_CONFIG_CHECK_VALID_TIMEOUT_SEC (1 * 60)
#define SETUP_READY_TIMEOUT_SEC             (3 * 60)

// buzzer.c
// ------------------------------------------------------------------
#define APP_ERRNO_SYSTEM_RESET     (0b0000) // 0 系统重启
#define APP_ERRNO_SETUP_FAIL       (0b0001) // 1 校准失败
#define APP_ERRNO_BL_ERROR         (0b1001) // 9 蓝牙错误
#define APP_ERRNO_GNSS_ERROR       (0b1100) // 12 GNSS错误
// #define APP_ERRNO_PRODUCTID_CHANGE (0b1100)
#define APP_ERRNO_UNKNOW           (0b1111) // 15 未知错误
// end buzzer.c

// app_well_setup.c
// ------------------------------------------------------------------
#define SetupReadyOFF                 0
#define SetupReadyON_ANGLE            1
#define SetupReadyON_GNSS             2
#define SetupReadyON_PROCESSING_ANGLE 3
#define SetupReadyON_PROCESSING_GNSS  4
#define SetupReadyON_OK               5
#define SetupReadyON_FAIL             6
// end app_well_setup.c

// app_main.c
// ------------------------------------------------------------------
enum app_wakeup_type
{
    APP_WAKEUP_TYPE_POWER_ON = 0,
    APP_WAKEUP_TYPE_RTC,
    APP_WAKEUP_TYPE_INT,
};

#define JL_ZHJG_FEATURE_TEMP     BIT0
#define JL_ZHJG_FEATURE_GPS      BIT1
#define JL_ZHJG_FEATURE_HUMIDITY BIT2

#define JL_ZHJG_MODEL_STATUS    1
#define JL_ZHJG_MODEL_WATERIM   2
#define JL_ZHJG_MODEL_03        3
#define JL_ZHJG_MODEL_DEPTH     4
#define JL_ZHJG_MODEL_CH4       5
#define JL_ZHJG_MODEL_DEPTH_Pro 6

struct product_model
{
    int model;
    int features;
};

extern struct product_model product_model_info;
extern enum app_wakeup_type g_app_wakeup_type;
// end app_main.c


// app_wake_state.c
// ------------------------------------------------------------------

#define WAKE_EVENT_START_REPORT  BIT0
#define WAKE_EVENT_REPORT_OK     BIT1
#define WAKE_EVENT_REPORT_FAIL   BIT2
#define WAKE_EVENT_ENTER_STANDBY BIT3

extern struct sdk_os_event wake_event;

int32_t get_wakeup_time(void);

int wake_fsm_poll(void);
//end app_wake_state.c

// app_fct_state.c
// ------------------------------------------------------------------
#define FactoryOFF       0
#define FactoryON        1
#define FactoryON_MCU    2
#define FactoryON_ACC    3
#define FactoryON_GNSS   4
#define FactoryON_BLE    5
#define FactoryON_COMM   6
#define FactoryON_REPORT 7
#define FactoryON_OK     8
#define FactoryON_FAIL   9

void fct_fsm_poll(void);
// end app_fct_state.c

//timer_task.c
// ------------------------------------------------------------------
extern uint16_t g_StableRelativeAngle;
extern uint16_t g_StableAbsoluteAngle;
extern uint16_t g_WaterIMStatus;
extern uint32_t g_waterim_is_stable;
void update_WELL_Status_CurrRelativeAngle_CurrAbsoluteAngle(void);
// end timer_task.c
#ifdef __cplusplus
}
#endif

#endif /* __APP_MAIN_H */

